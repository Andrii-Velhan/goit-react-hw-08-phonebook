{"version":3,"sources":["components/Container/Container.js","components/Spinner/Spinner.js","components/IconButton/IconButton.js","icons/delete.svg","redux/phoneBook/phoneBook-selectors.js","redux/phoneBook/phoneBook-actions.js","redux/phoneBook/phoneBook-operations.js","redux/phoneBook/phoneBook-reducer.js","components/ContactList/ContactList.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Logo/Logo.js","App.js","redux/store.js","index.js"],"names":["Container","children","className","Spinner","type","color","height","width","timeout","IconButton","onClick","defaultProps","_path","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDelete","_ref","svgRef","title","titleId","props","fill","id","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","ref","d","ForwardRef","getAllItems","state","phoneBook","items","getFilter","filter","phoneBookSelectors","getLoading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","axios","defaults","baseURL","phoneBookOperations","fetchContacts","dispatch","get","then","data","catch","error","addContact","number","item","post","removeContact","contactId","delete","createReducer","payload","loading","_","combineReducers","connect","onRemoveContact","TransitionGroup","component","map","CSSTransition","classNames","aria-label","Notification","message","in","unmountOnExit","ContactForm","setMessage","note","setState","setTimeout","handleChange","event","value","handleSubmit","preventDefault","find","onSubmit","htmlFor","onChange","placeholder","autoFocus","required","Component","dispatsh","onChangeFilter","e","onClearFilter","onExiting","Logo","appear","App","isLoadingContacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phoneBookReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90d5da96.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => (\r\n  <div className=\"Loader\">\r\n    <Loader\r\n      type=\"ThreeDots\"\r\n      color=\"#00BFFF\"\r\n      height={200}\r\n      width={200}\r\n      timeout={250}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './IconButton.scss';\r\n\r\nconst IconButton = ({ children, onClick, ...allProps }) => {\r\n\treturn (\r\n\t\t<button type=\"button\" onClick={onClick} className=\"IconButton\">\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nIconButton.defaultProps = {\r\n\tonClick: () => null,\r\n\tchildren: null,\r\n};\r\n\r\nIconButton.propTypes = {\r\n\tonClick: PropTypes.func,\r\n\tchildren: PropTypes.node,\r\n\t'aria-label': PropTypes.string.isRequired,\r\n}\r\n\r\nexport default IconButton;","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"currentColor\",\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 60.963 60.842\",\n    style: {\n      enableBackground: \"new 0 0 60.963 60.842\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.595,52.861L37.094,30.359L59.473,7.98c1.825-1.826,1.825-4.786,0-6.611 c-1.826-1.825-4.785-1.825-6.611,0L30.483,23.748L8.105,1.369c-1.826-1.825-4.785-1.825-6.611,0c-1.826,1.826-1.826,4.786,0,6.611 l22.378,22.379L1.369,52.861c-1.826,1.826-1.826,4.785,0,6.611c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369 l22.502-22.502l22.501,22.502c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369 C61.42,57.647,61.42,54.687,59.595,52.861z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.0de162d8.svg\";\nexport { ForwardRef as ReactComponent };","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getAllItems = state => state.phoneBook.items;\r\nconst getLoading = state => state.phoneBook.items;\r\nconst getFilter = state => state.phoneBook.filter;\r\n\r\n// without memoisation:\r\n// const getVisibleContacts = state => {\r\n//   const items = getAllItems(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   let list = items.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n\r\n//   return list;\r\n// };\r\n\r\n// with memoisation:\r\nconst getVisibleContacts = createSelector(\r\n  [getAllItems, getFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    let list = items.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n\r\n    return list;\r\n  },\r\n);\r\n\r\nconst phoneBookSelectors = {\r\n  getAllItems,\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};\r\n\r\nexport default phoneBookSelectors;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const removeContactRequest = createAction(\r\n  'contacts/removeContactRequest',\r\n);\r\nexport const removeContactSuccess = createAction(\r\n  'contacts/removeContactSuccess',\r\n);\r\nexport const removeContactError = createAction('contacts/removeContactError');\r\n\r\nexport const removeContact = createAction('contacts/remove');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './phoneBook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\n//! const fetchContacts with try/catch; async/await :\r\n\r\n// const fetchContacts = () => async dispatch => {\r\n//   dispatch(fetchContactsRequest());\r\n\r\n//   try {\r\n//     const { data } = await axios.get('/contacts');\r\n//     dispatch(fetchContactsSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(fetchContactsError(error));\r\n//   }\r\n// };\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  const item = { name, number };\r\n\r\n  dispatch(addContactRequest);\r\n\r\n  axios\r\n    .post('/contacts', item)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst removeContact = contactId => dispatch => {\r\n  dispatch(removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(removeContactSuccess(contactId)))\r\n    .catch(error => dispatch(removeContactError(error)));\r\n};\r\n\r\nconst phoneBookOperations = { fetchContacts, addContact, removeContact };\r\n\r\nexport default phoneBookOperations;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n} from './phoneBook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactList.css';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport IconButton from '../IconButton';\r\nimport { ReactComponent as DeleteIcon } from '../../icons/delete.svg';\r\nimport { connect } from 'react-redux';\r\nimport { phoneBookSelectors, phoneBookOperations } from '../../redux/phoneBook';\r\n\r\nconst ContactList = ({ items, onRemoveContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"ContactList\">\r\n      {items.map(({ id, name, number }) => (\r\n        <CSSTransition\r\n          key={id}\r\n          timeout={250}\r\n          classNames=\"ContactList__item-fade\"\r\n        >\r\n          <li key={id} className=\"ContactList__item\">\r\n            <p className=\"ContactList__name\">\r\n              {name}: {number}\r\n            </p>\r\n\r\n            <IconButton\r\n              className=\"ContactList__button\"\r\n              onClick={() => onRemoveContact(id)}\r\n              aria-label=\"Remove Contact\"\r\n            >\r\n              <DeleteIcon width=\"12\" height=\"12\" fill=\"#fff\" />\r\n            </IconButton>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object),\r\n  onRemoveContact: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  items: phoneBookSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemoveContact: id => dispatch(phoneBookOperations.removeContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './Notification.scss';\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn (\r\n\t\t<CSSTransition\r\n\t\t\tin={message}\r\n\t\t\ttimeout={250}\r\n\t\t\tclassNames=\"Notification-fade\"\r\n\t\t\tunmountOnExit>\r\n\r\n\t\t\t<div className=\"Overlay\">\r\n\t\t\t\t<p className=\"Notification\">\r\n\t\t\t\t\t{message}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</CSSTransition>\r\n\t);\r\n};\r\n\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactForm.scss';\r\nimport Notification from '../Notification';\r\nimport { connect } from 'react-redux';\r\nimport { phoneBookSelectors, phoneBookOperations } from '../../redux/phoneBook';\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    message: null,\r\n  };\r\n\r\n  static propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.object),\r\n    onSubmit: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {};\r\n\r\n  setMessage = note => {\r\n    this.setState({ message: note });\r\n    setTimeout(() => {\r\n      this.setState({ message: null });\r\n    }, 2500);\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  setMessage = note => {\r\n    this.setState({ message: note });\r\n    setTimeout(() => {\r\n      this.setState({ message: null });\r\n    }, 2500);\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setMessage('Enter concact name, please!');\r\n      return;\r\n    }\r\n\r\n    if (number === '') {\r\n      this.setMessage('Enter concact phone number, please!');\r\n      return;\r\n    }\r\n\r\n    if (name === '' && number === '') {\r\n      this.setMessage('Enter data to each of inputs: [name & number]!');\r\n    }\r\n\r\n    if (\r\n      this.props.items.find(\r\n        item => item.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      this.setMessage(`Contact ${name} is аlready exists!`);\r\n      return;\r\n    }\r\n    this.props.onSubmit(name, number);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, message } = this.state;\r\n    return (\r\n      <>\r\n        <Notification message={message} />\r\n        <form className=\"ContactForm\" onSubmit={this.handleSubmit}>\r\n          <label className=\"Label\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            id=\"name\"\r\n            className=\"ContactForm__input\"\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"Anton Cherny\"\r\n            autoFocus\r\n          />\r\n\r\n          <label className=\"Label\" htmlFor=\"number\">\r\n            Number\r\n          </label>\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            id=\"number\"\r\n            className=\"ContactForm__input\"\r\n            name=\"number\"\r\n            // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            required\r\n            onChange={this.handleChange}\r\n            placeholder=\"+38 (066) 000-00-00\"\r\n          />\r\n\r\n          <button type=\"submit\" className=\"ContactForm__button\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  items: phoneBookSelectors.getAllItems(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(phoneBookOperations.addContact({ name, number })),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import PropTypes from 'prop-types';\r\nimport './Filter.scss';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport { phoneBookSelectors, changeFilter } from '../../redux/phoneBook';\r\n\r\nconst Filter = ({ value, onChangeFilter, onClearFilter, items }) => (\r\n  <CSSTransition\r\n    in={items.length > 1}\r\n    timeout={250}\r\n    classNames=\"Filter-fade\"\r\n    unmountOnExit\r\n    onExiting={() => onClearFilter()}\r\n  >\r\n    <div className=\"filterForm\">\r\n      <label htmlFor=\"find\" className=\"Label filterLabel\">\r\n        Find contact by name\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        id=\"find\"\r\n        className=\"filterInput\"\r\n        onChange={onChangeFilter}\r\n      />\r\n    </div>\r\n  </CSSTransition>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n  items: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: phoneBookSelectors.getFilter(state),\r\n  items: phoneBookSelectors.getAllItems(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatsh => ({\r\n  onChangeFilter: e => dispatsh(changeFilter(e.target.value)),\r\n  onClearFilter: e => dispatsh(changeFilter('')),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","\r\nimport React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './Logo.scss';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<CSSTransition\r\n\t\t\tin={true}\r\n\t\t\tappear={true}\r\n\t\t\ttimeout={500}\r\n\t\t\tclassNames=\"Title-SlideIn\"\r\n\t\t\tunmountOnExit\r\n\t\t>\r\n\t\t\t<h1 className=\"Title\">Phonebook</h1>\r\n\t\t</CSSTransition>\r\n\t);\r\n};\r\n\r\nexport default Logo;","import 'modern-normalize/modern-normalize.css';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container from './components/Container';\r\nimport Spinner from '../src/components/Spinner';\r\nimport ContactList from './components/ContactList';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport Logo from './components/Logo';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  phoneBookOperations,\r\n  phoneBookSelectors,\r\n} from '../src/redux/phoneBook';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Logo />\r\n\r\n        <ContactForm />\r\n\r\n        <Filter />\r\n\r\n        {this.props.isLoadingContacts && <Spinner />}\r\n\r\n        <ContactList />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  items: phoneBookSelectors.getAllItems(state),\r\n  isLoadingContacts: phoneBookSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(phoneBookOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  // persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { phoneBookReducer } from './phoneBook';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phoneBook: phoneBookReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// const commonStore = {\r\n//   store,\r\n//   persistor,\r\n// };\r\n\r\n// export default commonStore;\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n// import Spinner from '../src/components/Spinner';\r\nimport './styles/base.scss';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  // <Provider store={store.store}>\r\n  <Provider store={store}>\r\n    {/* <PersistGate loading={<Spinner />} persistor={store.persistor}> */}\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n    {/* </PersistGate> */}\r\n  </Provider>,\r\n  // </React.StrictMode>\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}